/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/atoa/atoa.js":
/*!***********************************!*\
  !*** ./node_modules/atoa/atoa.js ***!
  \***********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 1:0-14 */
/***/ ((module) => {

module.exports = function atoa (a, n) { return Array.prototype.slice.call(a, n); }


/***/ }),

/***/ "./assets/js/customizer.min.js":
/*!*************************************!*\
  !*** ./assets/js/customizer.min.js ***!
  \*************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

var menuBgDefault = !1;
$(document).ready(function () {
  // $(".theme-cutomizer").sidenav({
  //     edge: "right"
  // });
  // new PerfectScrollbar(".theme-cutomizer",{
  //     suppressScrollX: !0
  // });
  function r(e) {
    e ? ($(".menu-dark-checkbox").prop("checked", !0), $(".sidenav-main").removeClass("sidenav-light").addClass("sidenav-dark")) : ($(".menu-dark-checkbox").prop("checked", !1), $(".sidenav-main").addClass("sidenav-light").removeClass("sidenav-dark"));
  }

  function a(e) {
    e ? ($(".sidenav-main").removeClass("nav-lock"), $(".navbar-main.nav-collapsible").removeClass("sideNav-lock").addClass("nav-expanded"), $(".navbar-toggler i").html("radio_button_unchecked"), $("#main").addClass("main-full"), $(".sidenav-main.nav-collapsible, .navbar .brand-sidebar").trigger("mouseleave")) : ($(".sidenav-main").addClass("nav-lock").removeClass("nav-collapsed"), $(".navbar-main.nav-collapsible").addClass("sideNav-lock").removeClass("nav-collapsed"), $(".navbar-toggler i").html("radio_button_checked"), $("#main").removeClass("main-full"), $(".sidenav-main.nav-collapsible, .navbar .brand-sidebar").trigger("mouseenter"));
  }

  function o(e) {
    d(".navbar-main"), e ? ($(".navbar-dark-checkbox").prop("checked", !0), $(".navbar-main").removeClass("navbar-light").addClass("navbar-dark")) : ($(".navbar-dark-checkbox").prop("checked", !1), $(".navbar-main").addClass("navbar-light").removeClass("navbar-dark"));
  }

  function n(e) {
    e ? ($(".footer-dark-checkbox").prop("checked", !0), $(".page-footer").removeClass("footer-light").addClass("footer-dark")) : ($(".footer-dark-checkbox").prop("checked", !1), $(".page-footer").addClass("footer-light").removeClass("footer-dark"));
  }

  function d(e) {
    $(e).removeClass("gradient-45deg-indigo-blue gradient-45deg-purple-deep-orange gradient-45deg-light-blue-cyan gradient-45deg-purple-amber gradient-45deg-purple-deep-purple gradient-45deg-deep-orange-orange gradient-45deg-green-teal gradient-45deg-indigo-light-blue gradient-45deg-red-pink red purple pink deep-purple cyan teal light-blue amber darken-3 brown darken-2 gradient-45deg-indigo-purple gradient-45deg-deep-purple-blue");
  }

  $("body").hasClass("vertical-modern-menu") || $("body").hasClass("vertical-menu-nav-dark") ? $(".menu-bg-color").hide() : $("body").hasClass("vertical-gradient-menu") || $("body").hasClass("vertical-dark-menu") ? ($(".menu-color").hide(), menuBgDefault = !0) : $("body").hasClass("horizontal-menu") && $(".menu-options").hide(), $(".menu-color-option, .menu-bg-color-option").click(function (e) {
    $(".menu-color .menu-color-option, .menu-bg-color .menu-bg-color-option").removeClass("selected"), $(this).addClass("selected");
    var a,
        n,
        o = $(this).attr("data-color");
    menuBgDefault ? (r(!0), n = o, d(".sidenav-main"), $(".sidenav-main").addClass(n + " sidenav-gradient")) : (a = o, d(".sidenav-main .sidenav li a.active"), $(".sidenav-main .sidenav li a.active").css({
      background: "none",
      "box-shadow": "none"
    }), $(".sidenav-main .sidenav li a.active").addClass(a + " gradient-shadow"));
  }), $(".menu-dark-checkbox").click(function (e) {
    $(".menu-dark-checkbox").prop("checked") ? r(!0) : r(!1);
  }), $(".menu-selection-radio").click(function (e) {
    var a,
        n = $(this).val();
    a = n, $(".sidenav-main").removeClass("sidenav-active-square sidenav-active-rounded").addClass(a);
  }), $(".menu-collapsed-checkbox").click(function (e) {
    $(".menu-collapsed-checkbox").prop("checked") ? a(!0) : a(!1);
  }), $(".navbar-color-option").click(function (e) {
    $(".navbar-color .navbar-color-option").removeClass("selected"), $(this).addClass("selected");
    var a,
        n = $(this).attr("data-color");
    o(!0), a = n, d(".navbar-main"), $(".navbar-main").addClass(a), $("body").hasClass("vertical-modern-menu") && (d(".content-wrapper-before"), $(".content-wrapper-before").addClass(a));
  }), $(".navbar-dark-checkbox").click(function (e) {
    $(".navbar-dark-checkbox").prop("checked") ? o(!0) : o(!1);
  }), $(".navbar-fixed-checkbox").click(function (e) {
    $(".navbar-fixed-checkbox").prop("checked") ? $("#header .navbar").addClass("navbar-fixed") : $("#header .navbar").removeClass("navbar-fixed");
  }), $(".footer-dark-checkbox").click(function (e) {
    d(".page-footer"), $(".footer-dark-checkbox").prop("checked") ? n(!0) : n(!1);
  }), $(".footer-fixed-checkbox").click(function (e) {
    $(".footer-fixed-checkbox").prop("checked") ? $(".page-footer").addClass("footer-fixed").removeClass("footer-static") : $(".page-footer").removeClass("footer-fixed").addClass("footer-static");
  }), 0 < $("html[data-textdirection='rtl']").length && $(".theme-cutomizer").sidenav({
    edge: "left"
  });
});

/***/ }),

/***/ "./assets/js/plugins.min.js":
/*!**********************************!*\
  !*** ./assets/js/plugins.min.js ***!
  \**********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*Preloader*/
$(window).on('load', function () {
  setTimeout(function () {
    $('body').addClass('loaded');
  }, 200);
});
var sidenavMain = $(".sidenav-main"),
    contentOverlay = $(".content-overlay"),
    navCollapsible = $(".navbar .nav-collapsible"),
    breadcrumbsWrapper = $("#breadcrumbs-wrapper");

function defaultMenuCollapse() {
  $("body").hasClass("menu-collapse") && 993 < $(window).width() && (sidenavMain.removeClass("nav-lock"), $(".nav-collapsible .navbar-toggler i").text("radio_button_unchecked"), navCollapsible.removeClass("sideNav-lock"), toogleMenuCollapse(), navigationCollapse());
}

function toogleMenuCollapse() {
  sidenavMain.hasClass("nav-expanded") && !sidenavMain.hasClass("nav-lock") && sidenavMain.toggleClass("nav-expanded"), $("#main").toggleClass("main-full");
}

function navigationCollapse() {
  if (!$(".sidenav-main.nav-collapsible").hasClass("nav-lock")) {
    var n = $(".collapsible .open").children().length;
    $(".sidenav-main.nav-collapsible, .navbar .nav-collapsible").addClass("nav-collapsed").removeClass("nav-expanded"), $("#slide-out > li.open > a").parent().addClass("close").removeClass("open"), setTimeout(function () {
      if (1 < n) {
        var e = $(".sidenav-main .collapsible");
        M.Collapsible.getInstance(e).close($(".collapsible .close").index());
      }
    }, 100);
  }
}

function slideOutChat() {
  var e = $(".search").val();

  if ("" != e) {
    var n = '<li class="collection-item display-flex avatar justify-content-end pl-5 pb-0" data-target="slide-out-chat"><div class="user-content speech-bubble-right"><p class="medium-small">' + e + "</p></div></li>";
    $("#right-sidebar-nav #slide-out-chat .chat-body .collection").append(n), $(".search").val("");
    var a = $("#right-sidebar-nav #slide-out-chat .chat-body .collection");
    0 < a.length && (a[0].scrollTop = a[0].scrollHeight);
  }
}

defaultMenuCollapse(), $(window).on("load", function () {
  $("body").removeClass("preload-transitions");
}), $(function () {
  "use strict";

  var _$$dropdown;

  function e() {
    var e = " -webkit- -moz- -o- -ms- ".split(" "),
        n = function n(e) {
      return window.matchMedia(e).matches;
    };

    return !!("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch) || n(["(", e.join("touch-enabled),("), "heartz", ")"].join(""));
  }

  $(".tabs").tabs(), $("#tabs-swipe-demo").length && $("#tabs-swipe-demo").tabs({
    swipeable: !0
  }), $("select").formSelect();
  var n = document.getElementById("indeterminate-checkbox");
  null !== n && (n.indeterminate = !0), $(".slider").slider({
    full_width: !0
  }), $(".notification-button, .profile-button").dropdown((_$$dropdown = {
    inDuration: 300,
    outDuration: 225,
    constrainWidth: !1,
    hover: !1,
    gutter: 0,
    coverTrigger: !1,
    alignment: "right"
  }, _defineProperty(_$$dropdown, "hover", !1), _defineProperty(_$$dropdown, "closeOnClick", !0), _$$dropdown)), $(".dropdown-submenu").on("mouseenter", function () {
    var e = $(this);
    $(this).find(".dropdownSub-menu").dropdown("open");
    var n = e.find(".dropdown-content");

    if (n) {
      var a = n.offset().left,
          l = n.width();
      0 < $("html[data-textdirection='rtl']").length ? l <= a ? e.find(".dropdown-content").removeClass("right-open").addClass("left-open") : e.find(".dropdown-content").removeClass("left-open").addClass("right-open") : window.innerWidth - (a + l) <= l ? e.find(".dropdown-content").removeClass("left-open").addClass("right-open") : e.find(".dropdown-content").removeClass("right-open").addClass("left-open");
    }
  }), $(".dropdown-submenu").on("mouseleave", function () {
    var e = $(this);
    e.find(".dropdownSub-menu").dropdown("close"), e.find(".dropdown-content").removeClass("right-open"), e.find(".dropdown-content").removeClass("left-open");
  }), $(".fixed-action-btn").floatingActionButton(), $(".fixed-action-btn.horizontal").floatingActionButton({
    direction: "left"
  }), $(".fixed-action-btn.click-to-toggle").floatingActionButton({
    direction: "left",
    hoverEnabled: !1
  }), $(".fixed-action-btn.toolbar").floatingActionButton({
    toolbarEnabled: !0
  }), $(".tab-demo").show().tabs(), $(".tab-demo-active").show().tabs(), $(".scrollspy").scrollSpy(), $(".tooltipped").tooltip({
    delay: 50
  });
  var a = document.querySelectorAll(".collapsible");
  M.Collapsible.init(a);
  var l = document.querySelector(".collapsible.expandable");
  M.Collapsible.init(l, {
    accordion: !1
  });

  if (breadcrumbsWrapper.attr("data-image")) {
    var o = breadcrumbsWrapper.attr("data-image");
    breadcrumbsWrapper.addClass("breadcrumbs-bg-image"), breadcrumbsWrapper.css("background-image", "url(" + o + ")");
  }

  var t,
      i = $("li.active .collapsible-sub .collapsible"),
      s = document.querySelectorAll(".sidenav-main .collapsible");

  if (M.Collapsible.init(s, {
    accordion: !0,
    onOpenStart: function onOpenStart() {
      $(".collapsible > li.open").removeClass("open"), setTimeout(function () {
        $("#slide-out > li.active > a").parent().addClass("open");
      }, 10);
    }
  }), $("body").hasClass("menu-collapse")) {
    var d = $(".sidenav-main .collapsible");
    1 < $("#slide-out > li.active").children().length && $("#slide-out > li.active > a").parent().addClass("close"), M.Collapsible.getInstance(d).close($(".collapsible .close").index());
  } else 1 < $("#slide-out > li.active").children().length && $("#slide-out > li.active > a").parent().addClass("open");

  if (0 < i.find("a.active").length && (i.find("a.active").closest("div.collapsible-body").show(), i.find("a.active").closest("div.collapsible-body").closest("li").addClass("active")), t = 0 < $(".sidenav-main li a.active").parent("li.active").parent("ul.collapsible-sub").length ? $(".sidenav-main li a.active").parent("li.active").parent("ul.collapsible-sub").position() : $(".sidenav-main li a.active").parent("li.active").position(), setTimeout(function () {
    void 0 !== t && $(".sidenav-main ul").stop().animate({
      scrollTop: t.top - 300
    }, 300);
  }, 300), $(".nav-collapsible .navbar-toggler").click(function () {
    toogleMenuCollapse(), "radio_button_unchecked" == $(this).children().text() ? ($(this).children().text("radio_button_checked"), $(".sidenav-main").addClass("nav-lock"), navCollapsible.addClass("sideNav-lock")) : ($(this).children().text("radio_button_unchecked"), $(".sidenav-main").removeClass("nav-lock"), navCollapsible.removeClass("sideNav-lock"));
  }), $(".sidenav-main.nav-collapsible, .navbar .brand-sidebar").mouseenter(function () {
    $(".sidenav-main.nav-collapsible").hasClass("nav-lock") || ($(".sidenav-main.nav-collapsible, .navbar .nav-collapsible").addClass("nav-expanded").removeClass("nav-collapsed"), $("#slide-out > li.close > a").parent().addClass("open").removeClass("close"), setTimeout(function () {
      if (1 < $(".collapsible .open").children().length) {
        var e = $(".sidenav-main .collapsible");
        M.Collapsible.getInstance(e).open($(".collapsible .open").index());
      }
    }, 100));
  }), $(".sidenav-main.nav-collapsible, .navbar .brand-sidebar").mouseleave(function () {
    navigationCollapse();
  }), $(".sidenav").sidenav({
    edge: "left"
  }), $(".slide-out-right-sidenav").sidenav({
    edge: "right"
  }), $(".slide-out-right-sidenav-chat").sidenav({
    edge: "right"
  }), e()) $(".leftside-navigation,.slide-out-right-body, .chat-body .collection, #ul-horizontal-nav").css("overflow", "scroll");else {
    if (0 < $("#slide-out.leftside-navigation").length && !$("#slide-out.leftside-navigation").hasClass("native-scroll")) new PerfectScrollbar(".leftside-navigation", {
      wheelSpeed: 2,
      wheelPropagation: !1,
      minScrollbarLength: 20
    });
    if (0 < $(".slide-out-right-body").length) new PerfectScrollbar(".slide-out-right-body, .chat-body .collection", {
      suppressScrollX: !0,
      wheelPropagation: !1
    });
    if (0 < $(".chat-body .collection").length) new PerfectScrollbar(".chat-body .collection", {
      suppressScrollX: !0
    });
    if (0 < $("#ul-horizontal-nav").length) var c = new PerfectScrollbar("#ul-horizontal-nav", {
      wheelPropagation: !1
    });
    $("#ul-horizontal-nav").on("mouseenter", function () {
      c.update();
    });
  }
  $("#messages .header-search-input").on("keyup", function () {
    $(".chat-user").css("animation", "none");
    var e = $(this).val().toLowerCase();
    "" != e ? $(".right-sidebar-chat .right-sidebar-chat-item").filter(function () {
      $(this).toggle(-1 < $(this).text().toLowerCase().indexOf(e));
    }) : $(".right-sidebar-chat .right-sidebar-chat-item").show();
  });
  var r = $("#right-sidebar-nav #slide-out-chat .chat-body .collection");

  function e() {
    try {
      return document.createEvent("TouchEvent"), !0;
    } catch (e) {
      return !1;
    }
  }

  0 < r.length && (r[0].scrollTop = r[0].scrollHeight), $(".toggle-fullscreen").click(function () {
    document.fullScreenElement && null !== document.fullScreenElement || !document.mozFullScreen && !document.webkitIsFullScreen ? document.documentElement.requestFullScreen ? document.documentElement.requestFullScreen() : document.documentElement.mozRequestFullScreen ? document.documentElement.mozRequestFullScreen() : document.documentElement.webkitRequestFullScreen ? document.documentElement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT) : document.documentElement.msRequestFullscreen && (document.msFullscreenElement ? document.msExitFullscreen() : document.documentElement.msRequestFullscreen()) : document.cancelFullScreen ? document.cancelFullScreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitCancelFullScreen && document.webkitCancelFullScreen();
  }), e() && $("#nav-mobile").css({
    overflow: "auto"
  }), // i18next.use(window.i18nextXHRBackend).init({
  //     debug: !1,
  //     fallbackLng: "en",
  //     backend: {
  //         loadPath: "../../../app-assets/data/locales/{{lng}}.json"
  //     },
  //     returnObjects: !0
  // }, 
  // function(e, n) {
  //     jqueryI18next.init(i18next, $)
  // }),
  $(".dropdown-language .dropdown-item").on("click", function () {
    var e = $(this);
    e.siblings(".selected").removeClass("selected"), e.addClass("selected");
    var n = e.find(".flag-icon").attr("class");
    $(".translation-button .flag-icon").removeClass().addClass(n);
    var a = e.find("a").data("language");
    i18next.changeLanguage(a, function (e, n) {
      $(".sidenav-main, #horizontal-nav").localize();
    });
  }), 0 < $("#ul-horizontal-nav li.active").length && $("#ul-horizontal-nav li.active").closest("ul").parents("li").addClass("active"), 0 < $("html[data-textdirection='rtl']").length && ($(".sidenav").sidenav({
    edge: "right"
  }), $(".slide-out-right-sidenav").sidenav({
    edge: "left"
  }), $(".slide-out-right-sidenav-chat").sidenav({
    edge: "left"
  }));
}), $(window).on("resize", function () {
  $(window).width() < 994 ? sidenavMain.hasClass("nav-collapsed") && (sidenavMain.removeClass("nav-collapsed").addClass("nav-lock nav-expanded"), navCollapsible.removeClass("nav-collapsed").addClass("sideNav-lock")) : 993 < $(window).width() && $("body").hasClass("menu-collapse") && sidenavMain.hasClass("nav-lock") && (sidenavMain.removeClass("nav-lock nav-expanded").addClass("nav-collapsed"), navCollapsible.removeClass("sideNav-lock").addClass("nav-collapsed"));
});

/***/ }),

/***/ "./src/engine.js":
/*!***********************!*\
  !*** ./src/engine.js ***!
  \***********************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__, __webpack_require__.g, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);


__webpack_require__(/*! ../assets/js/plugins.min.js */ "./assets/js/plugins.min.js");

__webpack_require__(/*! ../assets/js/customizer.min.js */ "./assets/js/customizer.min.js");

var pckg = __webpack_require__(/*! ../package.json */ "./package.json");

var jKanban = __webpack_require__(/*! jkanban */ "./node_modules/jkanban/jkanban.js");

__webpack_require__.g.pckg = pckg;
$(function () {
  $('._version').html(pckg.version);
});

/***/ }),

/***/ "./node_modules/contra/debounce.js":
/*!*****************************************!*\
  !*** ./node_modules/contra/debounce.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 5:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var ticky = __webpack_require__(/*! ticky */ "./node_modules/ticky/ticky-browser.js");

module.exports = function debounce (fn, args, ctx) {
  if (!fn) { return; }
  ticky(function run () {
    fn.apply(ctx || null, args || []);
  });
};


/***/ }),

/***/ "./node_modules/contra/emitter.js":
/*!****************************************!*\
  !*** ./node_modules/contra/emitter.js ***!
  \****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 6:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var atoa = __webpack_require__(/*! atoa */ "./node_modules/atoa/atoa.js");
var debounce = __webpack_require__(/*! ./debounce */ "./node_modules/contra/debounce.js");

module.exports = function emitter (thing, options) {
  var opts = options || {};
  var evt = {};
  if (thing === undefined) { thing = {}; }
  thing.on = function (type, fn) {
    if (!evt[type]) {
      evt[type] = [fn];
    } else {
      evt[type].push(fn);
    }
    return thing;
  };
  thing.once = function (type, fn) {
    fn._once = true; // thing.off(fn) still works!
    thing.on(type, fn);
    return thing;
  };
  thing.off = function (type, fn) {
    var c = arguments.length;
    if (c === 1) {
      delete evt[type];
    } else if (c === 0) {
      evt = {};
    } else {
      var et = evt[type];
      if (!et) { return thing; }
      et.splice(et.indexOf(fn), 1);
    }
    return thing;
  };
  thing.emit = function () {
    var args = atoa(arguments);
    return thing.emitterSnapshot(args.shift()).apply(this, args);
  };
  thing.emitterSnapshot = function (type) {
    var et = (evt[type] || []).slice(0);
    return function () {
      var args = atoa(arguments);
      var ctx = this || thing;
      if (type === 'error' && opts.throws !== false && !et.length) { throw args.length === 1 ? args[0] : args; }
      et.forEach(function emitter (listen) {
        if (opts.async) { debounce(listen, args, ctx); } else { listen.apply(ctx, args); }
        if (listen._once) { thing.off(type, listen); }
      });
      return thing;
    };
  };
  return thing;
};


/***/ }),

/***/ "./node_modules/crossvent/src/crossvent.js":
/*!*************************************************!*\
  !*** ./node_modules/crossvent/src/crossvent.js ***!
  \*************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__, __webpack_require__.g, __webpack_require__.* */
/*! CommonJS bailout: module.exports is used directly at 15:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var customEvent = __webpack_require__(/*! custom-event */ "./node_modules/custom-event/index.js");
var eventmap = __webpack_require__(/*! ./eventmap */ "./node_modules/crossvent/src/eventmap.js");
var doc = __webpack_require__.g.document;
var addEvent = addEventEasy;
var removeEvent = removeEventEasy;
var hardCache = [];

if (!__webpack_require__.g.addEventListener) {
  addEvent = addEventHard;
  removeEvent = removeEventHard;
}

module.exports = {
  add: addEvent,
  remove: removeEvent,
  fabricate: fabricateEvent
};

function addEventEasy (el, type, fn, capturing) {
  return el.addEventListener(type, fn, capturing);
}

function addEventHard (el, type, fn) {
  return el.attachEvent('on' + type, wrap(el, type, fn));
}

function removeEventEasy (el, type, fn, capturing) {
  return el.removeEventListener(type, fn, capturing);
}

function removeEventHard (el, type, fn) {
  var listener = unwrap(el, type, fn);
  if (listener) {
    return el.detachEvent('on' + type, listener);
  }
}

function fabricateEvent (el, type, model) {
  var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();
  if (el.dispatchEvent) {
    el.dispatchEvent(e);
  } else {
    el.fireEvent('on' + type, e);
  }
  function makeClassicEvent () {
    var e;
    if (doc.createEvent) {
      e = doc.createEvent('Event');
      e.initEvent(type, true, true);
    } else if (doc.createEventObject) {
      e = doc.createEventObject();
    }
    return e;
  }
  function makeCustomEvent () {
    return new customEvent(type, { detail: model });
  }
}

function wrapperFactory (el, type, fn) {
  return function wrapper (originalEvent) {
    var e = originalEvent || __webpack_require__.g.event;
    e.target = e.target || e.srcElement;
    e.preventDefault = e.preventDefault || function preventDefault () { e.returnValue = false; };
    e.stopPropagation = e.stopPropagation || function stopPropagation () { e.cancelBubble = true; };
    e.which = e.which || e.keyCode;
    fn.call(el, e);
  };
}

function wrap (el, type, fn) {
  var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);
  hardCache.push({
    wrapper: wrapper,
    element: el,
    type: type,
    fn: fn
  });
  return wrapper;
}

function unwrap (el, type, fn) {
  var i = find(el, type, fn);
  if (i) {
    var wrapper = hardCache[i].wrapper;
    hardCache.splice(i, 1); // free up a tad of memory
    return wrapper;
  }
}

function find (el, type, fn) {
  var i, item;
  for (i = 0; i < hardCache.length; i++) {
    item = hardCache[i];
    if (item.element === el && item.type === type && item.fn === fn) {
      return i;
    }
  }
}


/***/ }),

/***/ "./node_modules/crossvent/src/eventmap.js":
/*!************************************************!*\
  !*** ./node_modules/crossvent/src/eventmap.js ***!
  \************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__.g, __webpack_require__.* */
/*! CommonJS bailout: module.exports is used directly at 13:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var eventmap = [];
var eventname = '';
var ron = /^on/;

for (eventname in __webpack_require__.g) {
  if (ron.test(eventname)) {
    eventmap.push(eventname.slice(2));
  }
}

module.exports = eventmap;


/***/ }),

/***/ "./node_modules/custom-event/index.js":
/*!********************************************!*\
  !*** ./node_modules/custom-event/index.js ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__.g, __webpack_require__.* */
/*! CommonJS bailout: module.exports is used directly at 21:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var NativeCustomEvent = __webpack_require__.g.CustomEvent;

function useNative () {
  try {
    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });
    return  'cat' === p.type && 'bar' === p.detail.foo;
  } catch (e) {
  }
  return false;
}

/**
 * Cross-browser `CustomEvent` constructor.
 *
 * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent
 *
 * @public
 */

module.exports = useNative() ? NativeCustomEvent :

// IE >= 9
'function' === typeof document.createEvent ? function CustomEvent (type, params) {
  var e = document.createEvent('CustomEvent');
  if (params) {
    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);
  } else {
    e.initCustomEvent(type, false, false, void 0);
  }
  return e;
} :

// IE <= 8
function CustomEvent (type, params) {
  var e = document.createEventObject();
  e.type = type;
  if (params) {
    e.bubbles = Boolean(params.bubbles);
    e.cancelable = Boolean(params.cancelable);
    e.detail = params.detail;
  } else {
    e.bubbles = false;
    e.cancelable = false;
    e.detail = void 0;
  }
  return e;
}


/***/ }),

/***/ "./node_modules/dragula/classes.js":
/*!*****************************************!*\
  !*** ./node_modules/dragula/classes.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 30:0-14 */
/***/ ((module) => {

"use strict";


var cache = {};
var start = '(?:^|\\s)';
var end = '(?:\\s|$)';

function lookupClass (className) {
  var cached = cache[className];
  if (cached) {
    cached.lastIndex = 0;
  } else {
    cache[className] = cached = new RegExp(start + className + end, 'g');
  }
  return cached;
}

function addClass (el, className) {
  var current = el.className;
  if (!current.length) {
    el.className = className;
  } else if (!lookupClass(className).test(current)) {
    el.className += ' ' + className;
  }
}

function rmClass (el, className) {
  el.className = el.className.replace(lookupClass(className), ' ').trim();
}

module.exports = {
  add: addClass,
  rm: rmClass
};


/***/ }),

/***/ "./node_modules/dragula/dragula.js":
/*!*****************************************!*\
  !*** ./node_modules/dragula/dragula.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__, __webpack_require__.g, __webpack_require__.* */
/*! CommonJS bailout: module.exports is used directly at 608:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var emitter = __webpack_require__(/*! contra/emitter */ "./node_modules/contra/emitter.js");
var crossvent = __webpack_require__(/*! crossvent */ "./node_modules/crossvent/src/crossvent.js");
var classes = __webpack_require__(/*! ./classes */ "./node_modules/dragula/classes.js");
var doc = document;
var documentElement = doc.documentElement;

function dragula (initialContainers, options) {
  var len = arguments.length;
  if (len === 1 && Array.isArray(initialContainers) === false) {
    options = initialContainers;
    initialContainers = [];
  }
  var _mirror; // mirror image
  var _source; // source container
  var _item; // item being dragged
  var _offsetX; // reference x
  var _offsetY; // reference y
  var _moveX; // reference move x
  var _moveY; // reference move y
  var _initialSibling; // reference sibling when grabbed
  var _currentSibling; // reference sibling now
  var _copy; // item used for copying
  var _renderTimer; // timer for setTimeout renderMirrorImage
  var _lastDropTarget = null; // last container item was over
  var _grabbed; // holds mousedown context until first mousemove

  var o = options || {};
  if (o.moves === void 0) { o.moves = always; }
  if (o.accepts === void 0) { o.accepts = always; }
  if (o.invalid === void 0) { o.invalid = invalidTarget; }
  if (o.containers === void 0) { o.containers = initialContainers || []; }
  if (o.isContainer === void 0) { o.isContainer = never; }
  if (o.copy === void 0) { o.copy = false; }
  if (o.copySortSource === void 0) { o.copySortSource = false; }
  if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }
  if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }
  if (o.direction === void 0) { o.direction = 'vertical'; }
  if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }
  if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }

  var drake = emitter({
    containers: o.containers,
    start: manualStart,
    end: end,
    cancel: cancel,
    remove: remove,
    destroy: destroy,
    canMove: canMove,
    dragging: false
  });

  if (o.removeOnSpill === true) {
    drake.on('over', spillOver).on('out', spillOut);
  }

  events();

  return drake;

  function isContainer (el) {
    return drake.containers.indexOf(el) !== -1 || o.isContainer(el);
  }

  function events (remove) {
    var op = remove ? 'remove' : 'add';
    touchy(documentElement, op, 'mousedown', grab);
    touchy(documentElement, op, 'mouseup', release);
  }

  function eventualMovements (remove) {
    var op = remove ? 'remove' : 'add';
    touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);
  }

  function movements (remove) {
    var op = remove ? 'remove' : 'add';
    crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8
    crossvent[op](documentElement, 'click', preventGrabbed);
  }

  function destroy () {
    events(true);
    release({});
  }

  function preventGrabbed (e) {
    if (_grabbed) {
      e.preventDefault();
    }
  }

  function grab (e) {
    _moveX = e.clientX;
    _moveY = e.clientY;

    var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;
    if (ignore) {
      return; // we only care about honest-to-god left clicks and touch events
    }
    var item = e.target;
    var context = canStart(item);
    if (!context) {
      return;
    }
    _grabbed = context;
    eventualMovements();
    if (e.type === 'mousedown') {
      if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208
        item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176
      } else {
        e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155
      }
    }
  }

  function startBecauseMouseMoved (e) {
    if (!_grabbed) {
      return;
    }
    if (whichMouseButton(e) === 0) {
      release({});
      return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope
    }
    // truthy check fixes #239, equality fixes #207
    if (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {
      return;
    }
    if (o.ignoreInputTextSelection) {
      var clientX = getCoord('clientX', e);
      var clientY = getCoord('clientY', e);
      var elementBehindCursor = doc.elementFromPoint(clientX, clientY);
      if (isInput(elementBehindCursor)) {
        return;
      }
    }

    var grabbed = _grabbed; // call to end() unsets _grabbed
    eventualMovements(true);
    movements();
    end();
    start(grabbed);

    var offset = getOffset(_item);
    _offsetX = getCoord('pageX', e) - offset.left;
    _offsetY = getCoord('pageY', e) - offset.top;

    classes.add(_copy || _item, 'gu-transit');
    renderMirrorImage();
    drag(e);
  }

  function canStart (item) {
    if (drake.dragging && _mirror) {
      return;
    }
    if (isContainer(item)) {
      return; // don't drag container itself
    }
    var handle = item;
    while (getParent(item) && isContainer(getParent(item)) === false) {
      if (o.invalid(item, handle)) {
        return;
      }
      item = getParent(item); // drag target should be a top element
      if (!item) {
        return;
      }
    }
    var source = getParent(item);
    if (!source) {
      return;
    }
    if (o.invalid(item, handle)) {
      return;
    }

    var movable = o.moves(item, source, handle, nextEl(item));
    if (!movable) {
      return;
    }

    return {
      item: item,
      source: source
    };
  }

  function canMove (item) {
    return !!canStart(item);
  }

  function manualStart (item) {
    var context = canStart(item);
    if (context) {
      start(context);
    }
  }

  function start (context) {
    if (isCopy(context.item, context.source)) {
      _copy = context.item.cloneNode(true);
      drake.emit('cloned', _copy, context.item, 'copy');
    }

    _source = context.source;
    _item = context.item;
    _initialSibling = _currentSibling = nextEl(context.item);

    drake.dragging = true;
    drake.emit('drag', _item, _source);
  }

  function invalidTarget () {
    return false;
  }

  function end () {
    if (!drake.dragging) {
      return;
    }
    var item = _copy || _item;
    drop(item, getParent(item));
  }

  function ungrab () {
    _grabbed = false;
    eventualMovements(true);
    movements(true);
  }

  function release (e) {
    ungrab();

    if (!drake.dragging) {
      return;
    }
    var item = _copy || _item;
    var clientX = getCoord('clientX', e);
    var clientY = getCoord('clientY', e);
    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);
    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);
    if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {
      drop(item, dropTarget);
    } else if (o.removeOnSpill) {
      remove();
    } else {
      cancel();
    }
  }

  function drop (item, target) {
    var parent = getParent(item);
    if (_copy && o.copySortSource && target === _source) {
      parent.removeChild(_item);
    }
    if (isInitialPlacement(target)) {
      drake.emit('cancel', item, _source, _source);
    } else {
      drake.emit('drop', item, target, _source, _currentSibling);
    }
    cleanup();
  }

  function remove () {
    if (!drake.dragging) {
      return;
    }
    var item = _copy || _item;
    var parent = getParent(item);
    if (parent) {
      parent.removeChild(item);
    }
    drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);
    cleanup();
  }

  function cancel (revert) {
    if (!drake.dragging) {
      return;
    }
    var reverts = arguments.length > 0 ? revert : o.revertOnSpill;
    var item = _copy || _item;
    var parent = getParent(item);
    var initial = isInitialPlacement(parent);
    if (initial === false && reverts) {
      if (_copy) {
        if (parent) {
          parent.removeChild(_copy);
        }
      } else {
        _source.insertBefore(item, _initialSibling);
      }
    }
    if (initial || reverts) {
      drake.emit('cancel', item, _source, _source);
    } else {
      drake.emit('drop', item, parent, _source, _currentSibling);
    }
    cleanup();
  }

  function cleanup () {
    var item = _copy || _item;
    ungrab();
    removeMirrorImage();
    if (item) {
      classes.rm(item, 'gu-transit');
    }
    if (_renderTimer) {
      clearTimeout(_renderTimer);
    }
    drake.dragging = false;
    if (_lastDropTarget) {
      drake.emit('out', item, _lastDropTarget, _source);
    }
    drake.emit('dragend', item);
    _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;
  }

  function isInitialPlacement (target, s) {
    var sibling;
    if (s !== void 0) {
      sibling = s;
    } else if (_mirror) {
      sibling = _currentSibling;
    } else {
      sibling = nextEl(_copy || _item);
    }
    return target === _source && sibling === _initialSibling;
  }

  function findDropTarget (elementBehindCursor, clientX, clientY) {
    var target = elementBehindCursor;
    while (target && !accepted()) {
      target = getParent(target);
    }
    return target;

    function accepted () {
      var droppable = isContainer(target);
      if (droppable === false) {
        return false;
      }

      var immediate = getImmediateChild(target, elementBehindCursor);
      var reference = getReference(target, immediate, clientX, clientY);
      var initial = isInitialPlacement(target, reference);
      if (initial) {
        return true; // should always be able to drop it right back where it was
      }
      return o.accepts(_item, target, _source, reference);
    }
  }

  function drag (e) {
    if (!_mirror) {
      return;
    }
    e.preventDefault();

    var clientX = getCoord('clientX', e);
    var clientY = getCoord('clientY', e);
    var x = clientX - _offsetX;
    var y = clientY - _offsetY;

    _mirror.style.left = x + 'px';
    _mirror.style.top = y + 'px';

    var item = _copy || _item;
    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);
    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);
    var changed = dropTarget !== null && dropTarget !== _lastDropTarget;
    if (changed || dropTarget === null) {
      out();
      _lastDropTarget = dropTarget;
      over();
    }
    var parent = getParent(item);
    if (dropTarget === _source && _copy && !o.copySortSource) {
      if (parent) {
        parent.removeChild(item);
      }
      return;
    }
    var reference;
    var immediate = getImmediateChild(dropTarget, elementBehindCursor);
    if (immediate !== null) {
      reference = getReference(dropTarget, immediate, clientX, clientY);
    } else if (o.revertOnSpill === true && !_copy) {
      reference = _initialSibling;
      dropTarget = _source;
    } else {
      if (_copy && parent) {
        parent.removeChild(item);
      }
      return;
    }
    if (
      (reference === null && changed) ||
      reference !== item &&
      reference !== nextEl(item)
    ) {
      _currentSibling = reference;
      dropTarget.insertBefore(item, reference);
      drake.emit('shadow', item, dropTarget, _source);
    }
    function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }
    function over () { if (changed) { moved('over'); } }
    function out () { if (_lastDropTarget) { moved('out'); } }
  }

  function spillOver (el) {
    classes.rm(el, 'gu-hide');
  }

  function spillOut (el) {
    if (drake.dragging) { classes.add(el, 'gu-hide'); }
  }

  function renderMirrorImage () {
    if (_mirror) {
      return;
    }
    var rect = _item.getBoundingClientRect();
    _mirror = _item.cloneNode(true);
    _mirror.style.width = getRectWidth(rect) + 'px';
    _mirror.style.height = getRectHeight(rect) + 'px';
    classes.rm(_mirror, 'gu-transit');
    classes.add(_mirror, 'gu-mirror');
    o.mirrorContainer.appendChild(_mirror);
    touchy(documentElement, 'add', 'mousemove', drag);
    classes.add(o.mirrorContainer, 'gu-unselectable');
    drake.emit('cloned', _mirror, _item, 'mirror');
  }

  function removeMirrorImage () {
    if (_mirror) {
      classes.rm(o.mirrorContainer, 'gu-unselectable');
      touchy(documentElement, 'remove', 'mousemove', drag);
      getParent(_mirror).removeChild(_mirror);
      _mirror = null;
    }
  }

  function getImmediateChild (dropTarget, target) {
    var immediate = target;
    while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {
      immediate = getParent(immediate);
    }
    if (immediate === documentElement) {
      return null;
    }
    return immediate;
  }

  function getReference (dropTarget, target, x, y) {
    var horizontal = o.direction === 'horizontal';
    var reference = target !== dropTarget ? inside() : outside();
    return reference;

    function outside () { // slower, but able to figure out any position
      var len = dropTarget.children.length;
      var i;
      var el;
      var rect;
      for (i = 0; i < len; i++) {
        el = dropTarget.children[i];
        rect = el.getBoundingClientRect();
        if (horizontal && (rect.left + rect.width / 2) > x) { return el; }
        if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }
      }
      return null;
    }

    function inside () { // faster, but only available if dropped inside a child element
      var rect = target.getBoundingClientRect();
      if (horizontal) {
        return resolve(x > rect.left + getRectWidth(rect) / 2);
      }
      return resolve(y > rect.top + getRectHeight(rect) / 2);
    }

    function resolve (after) {
      return after ? nextEl(target) : target;
    }
  }

  function isCopy (item, container) {
    return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);
  }
}

function touchy (el, op, type, fn) {
  var touch = {
    mouseup: 'touchend',
    mousedown: 'touchstart',
    mousemove: 'touchmove'
  };
  var pointers = {
    mouseup: 'pointerup',
    mousedown: 'pointerdown',
    mousemove: 'pointermove'
  };
  var microsoft = {
    mouseup: 'MSPointerUp',
    mousedown: 'MSPointerDown',
    mousemove: 'MSPointerMove'
  };
  if (__webpack_require__.g.navigator.pointerEnabled) {
    crossvent[op](el, pointers[type], fn);
  } else if (__webpack_require__.g.navigator.msPointerEnabled) {
    crossvent[op](el, microsoft[type], fn);
  } else {
    crossvent[op](el, touch[type], fn);
    crossvent[op](el, type, fn);
  }
}

function whichMouseButton (e) {
  if (e.touches !== void 0) { return e.touches.length; }
  if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261
  if (e.buttons !== void 0) { return e.buttons; }
  var button = e.button;
  if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575
    return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);
  }
}

function getOffset (el) {
  var rect = el.getBoundingClientRect();
  return {
    left: rect.left + getScroll('scrollLeft', 'pageXOffset'),
    top: rect.top + getScroll('scrollTop', 'pageYOffset')
  };
}

function getScroll (scrollProp, offsetProp) {
  if (typeof __webpack_require__.g[offsetProp] !== 'undefined') {
    return __webpack_require__.g[offsetProp];
  }
  if (documentElement.clientHeight) {
    return documentElement[scrollProp];
  }
  return doc.body[scrollProp];
}

function getElementBehindPoint (point, x, y) {
  var p = point || {};
  var state = p.className;
  var el;
  p.className += ' gu-hide';
  el = doc.elementFromPoint(x, y);
  p.className = state;
  return el;
}

function never () { return false; }
function always () { return true; }
function getRectWidth (rect) { return rect.width || (rect.right - rect.left); }
function getRectHeight (rect) { return rect.height || (rect.bottom - rect.top); }
function getParent (el) { return el.parentNode === doc ? null : el.parentNode; }
function isInput (el) { return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); }
function isEditable (el) {
  if (!el) { return false; } // no parents were editable
  if (el.contentEditable === 'false') { return false; } // stop the lookup
  if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain
  return isEditable(getParent(el)); // contentEditable is set to 'inherit'
}

function nextEl (el) {
  return el.nextElementSibling || manually();
  function manually () {
    var sibling = el;
    do {
      sibling = sibling.nextSibling;
    } while (sibling && sibling.nodeType !== 1);
    return sibling;
  }
}

function getEventHost (e) {
  // on touchend event, we have to use `e.changedTouches`
  // see http://stackoverflow.com/questions/7192563/touchend-event-properties
  // see https://github.com/bevacqua/dragula/issues/34
  if (e.targetTouches && e.targetTouches.length) {
    return e.targetTouches[0];
  }
  if (e.changedTouches && e.changedTouches.length) {
    return e.changedTouches[0];
  }
  return e;
}

function getCoord (coord, e) {
  var host = getEventHost(e);
  var missMap = {
    pageX: 'clientX', // IE8
    pageY: 'clientY' // IE8
  };
  if (coord in missMap && !(coord in host) && missMap[coord] in host) {
    coord = missMap[coord];
  }
  return host[coord];
}

module.exports = dragula;


/***/ }),

/***/ "./node_modules/jkanban/jkanban.js":
/*!*****************************************!*\
  !*** ./node_modules/jkanban/jkanban.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__ */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/**
 * jKanban
 * Vanilla Javascript plugin for manage kanban boards
 *
 * @site: http://www.riccardotartaglia.it/jkanban/
 * @author: Riccardo Tartaglia
 */

//Require dragula
var dragula = __webpack_require__(/*! dragula */ "./node_modules/dragula/dragula.js");

(function() {
  this.jKanban = function() {
    var self = this;
    var __DEFAULT_ITEM_HANDLE_OPTIONS = {
      enabled: false
    }
    this._disallowedItemProperties = [
      "id",
      "title",
      "click",
      "drag",
      "dragend",
      "drop",
      "order"
    ];
    this.element = "";
    this.container = "";
    this.boardContainer = [];
    this.handlers = [];
    this.dragula = dragula;
    this.drake = "";
    this.drakeBoard = "";
    this.addItemButton = false;
    this.buttonContent = "+";
    this.itemHandleOptions = __DEFAULT_ITEM_HANDLE_OPTIONS;
    var defaults = {
      element: "",
      gutter: "15px",
      widthBoard: "250px",
      responsive: "700",
      responsivePercentage: false,
      boards: [],
      dragBoards: true,
      dragItems: true, //whether can drag cards or not, useful when set permissions on it.
      addItemButton: false,
      buttonContent: "+",
      itemHandleOptions: __DEFAULT_ITEM_HANDLE_OPTIONS,
      dragEl: function(el, source) {},
      dragendEl: function(el) {},
      dropEl: function(el, target, source, sibling) {},
      dragBoard: function(el, source) {},
      dragendBoard: function(el) {},
      dropBoard: function(el, target, source, sibling) {},
      click: function(el) {},
      buttonClick: function(el, boardId) {}
    };

    if (arguments[0] && typeof arguments[0] === "object") {
      this.options = __extendDefaults(defaults, arguments[0]);
    }

    this.__getCanMove = function(handle) {
      if (!self.options.itemHandleOptions.enabled) {
        return !!self.options.dragItems;
      }

      if (self.options.itemHandleOptions.handleClass) {
        return handle.classList.contains(self.options.itemHandleOptions.handleClass);
      }

      return handle.classList.contains("item_handle")
    }

    this.init = function() {
      //set initial boards
      __setBoard();
      //set drag with dragula
      if (window.innerWidth > self.options.responsive) {
        //Init Drag Board
        self.drakeBoard = self
          .dragula([self.container], {
            moves: function(el, source, handle, sibling) {
              if (!self.options.dragBoards) return false;
              return (
                handle.classList.contains("kanban-board-header") ||
                handle.classList.contains("kanban-title-board")
              );
            },
            accepts: function(el, target, source, sibling) {
              return target.classList.contains("kanban-container");
            },
            revertOnSpill: true,
            direction: "horizontal"
          })
          .on("drag", function(el, source) {
            el.classList.add("is-moving");
            self.options.dragBoard(el, source);
            if (typeof el.dragfn === "function") el.dragfn(el, source);
          })
          .on("dragend", function(el) {
            __updateBoardsOrder();
            el.classList.remove("is-moving");
            self.options.dragendBoard(el);
            if (typeof el.dragendfn === "function") el.dragendfn(el);
          })
          .on("drop", function(el, target, source, sibling) {
            el.classList.remove("is-moving");
            self.options.dropBoard(el, target, source, sibling);
            if (typeof el.dropfn === "function")
              el.dropfn(el, target, source, sibling);
          });

        //Init Drag Item
        self.drake = self
          .dragula(self.boardContainer, {
            moves: function(el, source, handle, sibling) {
              return self.__getCanMove(handle);
            },
            revertOnSpill: true
          })
          .on("cancel", function(el, container, source) {
            self.enableAllBoards();
          })
          .on("drag", function(el, source) {
            var elClass = el.getAttribute("class");
            if (elClass !== "" && elClass.indexOf("not-draggable") > -1) {
              self.drake.cancel(true);
              return;
            }

            el.classList.add("is-moving");
            var boardJSON = __findBoardJSON(source.parentNode.dataset.id);
            if (boardJSON.dragTo !== undefined) {
              self.options.boards.map(function(board) {
                if (
                  boardJSON.dragTo.indexOf(board.id) === -1 &&
                  board.id !== source.parentNode.dataset.id
                ) {
                  self.findBoard(board.id).classList.add("disabled-board");
                }
              });
            }

            self.options.dragEl(el, source);
            if (el !== null && typeof el.dragfn === "function")
              el.dragfn(el, source);
          })
          .on("dragend", function(el) {
            self.options.dragendEl(el);
            if (el !== null && typeof el.dragendfn === "function")
              el.dragendfn(el);
          })
          .on("drop", function(el, target, source, sibling) {
            self.enableAllBoards();

            var boardJSON = __findBoardJSON(source.parentNode.dataset.id);
            if (boardJSON.dragTo !== undefined) {
              if (
                boardJSON.dragTo.indexOf(target.parentNode.dataset.id) === -1 &&
                target.parentNode.dataset.id !== source.parentNode.dataset.id
              ) {
                self.drake.cancel(true);
              }
            }
            if (el !== null) {
              var result = self.options.dropEl(el, target, source, sibling);
              if (result === false) {
                self.drake.cancel(true);
              }
              el.classList.remove("is-moving");
              if (typeof el.dropfn === "function")
                el.dropfn(el, target, source, sibling);
            }
          });
      }
    };

    this.enableAllBoards = function() {
      var allB = document.querySelectorAll(".kanban-board");
      if (allB.length > 0 && allB !== undefined) {
        for (var i = 0; i < allB.length; i++) {
          allB[i].classList.remove("disabled-board");
        }
      }
    };

    this.addElement = function(boardID, element) {
      var board = self.element.querySelector(
        '[data-id="' + boardID + '"] .kanban-drag'
      );
      var nodeItem = document.createElement("div");
      nodeItem.classList.add("kanban-item");
      if (typeof element.id !== "undefined" && element.id !== "") {
        nodeItem.setAttribute("data-eid", element.id);
      }
      if(element.class && Array.isArray(element.class)) {
	element.class.forEach( function(cl){
	  nodeItem.classList.add(cl);
	})
      }
      nodeItem.innerHTML = __buildItemTitle(element.title);
      //add function
      nodeItem.clickfn = element.click;
      nodeItem.dragfn = element.drag;
      nodeItem.dragendfn = element.dragend;
      nodeItem.dropfn = element.drop;
      __appendCustomProperties(nodeItem, element);
      __onclickHandler(nodeItem);
      if (self.options.itemHandleOptions.enabled) {
        nodeItem.style.cursor = "default";
      }
      board.appendChild(nodeItem);
      return self;
    };

    this.addForm = function(boardID, formItem) {
      var board = self.element.querySelector(
        '[data-id="' + boardID + '"] .kanban-drag'
      );
      var _attribute = formItem.getAttribute("class");
      formItem.setAttribute("class", _attribute + " not-draggable");
      board.appendChild(formItem);
      return self;
    };

    this.addBoards = function(boards, isInit) {
      if (self.options.responsivePercentage) {
        self.container.style.width = "100%";
        self.options.gutter = "1%";
        if (window.innerWidth > self.options.responsive) {
          var boardWidth = (100 - boards.length * 2) / boards.length;
        } else {
          var boardWidth = 100 - boards.length * 2;
        }
      } else {
        var boardWidth = self.options.widthBoard;
      }
      var addButton = self.options.addItemButton;
      var buttonContent = self.options.buttonContent;

      //for on all the boards
      for (var boardkey in boards) {
        // single board
        var board = boards[boardkey];
        if (!isInit) {
          self.options.boards.push(board);
        }

        if (!self.options.responsivePercentage) {
          //add width to container
          if (self.container.style.width === "") {
            self.container.style.width =
              parseInt(boardWidth) + parseInt(self.options.gutter) * 2 + "px";
          } else {
            self.container.style.width =
              parseInt(self.container.style.width) +
              parseInt(boardWidth) +
              parseInt(self.options.gutter) * 2 +
              "px";
          }
        }
        //create node
        var boardNode = document.createElement("div");
        boardNode.dataset.id = board.id;
        boardNode.dataset.order = self.container.childNodes.length + 1;
        boardNode.classList.add("kanban-board");
        //set style
        if (self.options.responsivePercentage) {
          boardNode.style.width = boardWidth + "%";
        } else {
          boardNode.style.width = boardWidth;
        }
        boardNode.style.marginLeft = self.options.gutter;
        boardNode.style.marginRight = self.options.gutter;
        // header board
        var headerBoard = document.createElement("header");
        if (board.class !== "" && board.class !== undefined)
          var allClasses = board.class.split(",");
        else allClasses = [];
        headerBoard.classList.add("kanban-board-header");
        allClasses.map(function(value) {
          headerBoard.classList.add(value);
        });
        headerBoard.innerHTML =
          '<div class="kanban-title-board">' + board.title + "</div>";
        // if add button is true, add button to the board
        if (addButton) {
          var btn = document.createElement("BUTTON");
          var t = document.createTextNode(buttonContent);
          btn.setAttribute(
            "class",
            "kanban-title-button btn btn-default btn-xs"
          );
          btn.appendChild(t);
          //var buttonHtml = '<button class="kanban-title-button btn btn-default btn-xs">'+buttonContent+'</button>'
          headerBoard.appendChild(btn);
          __onButtonClickHandler(btn, board.id);
        }
        //content board
        var contentBoard = document.createElement("main");
        contentBoard.classList.add("kanban-drag");
        if (board.bodyClass !== "" && board.bodyClass !== undefined)
          var bodyClasses = board.bodyClass.split(",");
        else bodyClasses = [];
        bodyClasses.map(function(value) {
          contentBoard.classList.add(value);
        });
        //add drag to array for dragula
        self.boardContainer.push(contentBoard);
        for (var itemkey in board.item) {
          //create item
          var itemKanban = board.item[itemkey];
          var nodeItem = document.createElement("div");
          nodeItem.classList.add("kanban-item");
          if (itemKanban.id) {
            nodeItem.dataset.eid = itemKanban.id;
          }
          if(itemKanban.class && Array.isArray(itemKanban.class)) {
            itemKanban.class.forEach( function(cl){
              nodeItem.classList.add(cl);
            })
          }
          nodeItem.innerHTML = __buildItemTitle(itemKanban.title);
          //add function
          nodeItem.clickfn = itemKanban.click;
          nodeItem.dragfn = itemKanban.drag;
          nodeItem.dragendfn = itemKanban.dragend;
          nodeItem.dropfn = itemKanban.drop;
          __appendCustomProperties(nodeItem, itemKanban);
          //add click handler of item
          __onclickHandler(nodeItem);
          if (self.options.itemHandleOptions.enabled) {
            nodeItem.style.cursor = "default";
          }
          contentBoard.appendChild(nodeItem);
        }
        //footer board
        var footerBoard = document.createElement("footer");
        //board assembly
        boardNode.appendChild(headerBoard);
        boardNode.appendChild(contentBoard);
        boardNode.appendChild(footerBoard);
        //board add
        self.container.appendChild(boardNode);
      }
      return self;
    };

    this.findBoard = function(id) {
      var el = self.element.querySelector('[data-id="' + id + '"]');
      return el;
    };

    this.getParentBoardID = function(el) {
      if (typeof el === "string") {
        el = self.element.querySelector('[data-eid="' + el + '"]');
      }
      if (el === null) {
        return null;
      }
      return el.parentNode.parentNode.dataset.id;
    };

    this.moveElement = function(targetBoardID, elementID, element) {
      if (targetBoardID === this.getParentBoardID(elementID)) {
        return;
      }

      this.removeElement(elementID);
      return this.addElement(targetBoardID, element);
    };

    this.replaceElement = function(el, element) {
      var nodeItem = el;
      if (typeof nodeItem === "string") {
        nodeItem = self.element.querySelector('[data-eid="' + el + '"]');
      }
      nodeItem.innerHTML = element.title;
      // add function
      nodeItem.clickfn = element.click;
      nodeItem.dragfn = element.drag;
      nodeItem.dragendfn = element.dragend;
      nodeItem.dropfn = element.drop;
      __appendCustomProperties(nodeItem, element);
      return self;
    };

    this.findElement = function(id) {
      var el = self.element.querySelector('[data-eid="' + id + '"]');
      return el;
    };

    this.getBoardElements = function(id) {
      var board = self.element.querySelector(
        '[data-id="' + id + '"] .kanban-drag'
      );
      return board.childNodes;
    };

    this.removeElement = function(el) {
      if (typeof el === "string")
        el = self.element.querySelector('[data-eid="' + el + '"]');
      if (el !== null) {
        el.remove();
      }
      return self;
    };

    this.removeBoard = function(board) {
      var boardElement = null;
      if (typeof board === "string")
        boardElement = self.element.querySelector('[data-id="' + board + '"]');
      if (boardElement !== null) {
        boardElement.remove();
      }

      // remove thboard in options.boards
	    for(var i = 0; i < self.options.boards.length; i++) {
		    if(self.options.boards[i].id === board) {
			    self.options.boards.splice(i, 1);
			    break;
		    }
	    }

      return self;
    };

    // board button on click function
    this.onButtonClick = function(el) {};
    //PRIVATE FUNCTION
    function __extendDefaults(source, properties) {
      var property;
      for (property in properties) {
        if (properties.hasOwnProperty(property)) {
          source[property] = properties[property];
        }
      }
      return source;
    }

    function __setBoard() {
      self.element = document.querySelector(self.options.element);
      //create container
      var boardContainer = document.createElement("div");
      boardContainer.classList.add("kanban-container");
      self.container = boardContainer;
      //add boards
      self.addBoards(self.options.boards, true);
      //appends to container
      self.element.appendChild(self.container);
    }

    function __onclickHandler(nodeItem, clickfn) {
      nodeItem.addEventListener("click", function(e) {
        e.preventDefault();
        self.options.click(this);
        if (typeof this.clickfn === "function") this.clickfn(this);
      });
    }

    function __onButtonClickHandler(nodeItem, boardId) {
      nodeItem.addEventListener("click", function(e) {
        e.preventDefault();
        self.options.buttonClick(this, boardId);
        // if(typeof(this.clickfn) === 'function')
        //     this.clickfn(this);
      });
    }

    function __findBoardJSON(id) {
      var el = [];
      self.options.boards.map(function(board) {
        if (board.id === id) {
          return el.push(board);
        }
      });
      return el[0];
    }

    function __appendCustomProperties(element, parentObject) {
      for (var propertyName in parentObject) {
        if (self._disallowedItemProperties.indexOf(propertyName) > -1) {
          continue;
        }

        element.setAttribute(
          "data-" + propertyName,
          parentObject[propertyName]
        );
      }
    }

    function __updateBoardsOrder() {
      var index = 1;
      for (var i = 0; i < self.container.childNodes.length; i++) {
        self.container.childNodes[i].dataset.order = index++;
      }
    }

    function __buildItemTitle(title) {
      var result = title;
      if (self.options.itemHandleOptions.enabled) {
        if ((self.options.itemHandleOptions.customHandler || undefined) === undefined) {
          var customCssHandler = self.options.itemHandleOptions.customCssHandler;
          var customCssIconHandler = self.options.itemHandleOptions.customCssIconHandler;
          if ((customCssHandler || undefined) === undefined) {
            customCssHandler = "drag_handler";
          }
          if ((customCssIconHandler || undefined) === undefined) {
            customCssIconHandler = customCssHandler + "_icon";
          }

          result = "<div class='item_handle "+customCssHandler+"'><i class='item_handle "+customCssIconHandler+"'></i></div><div>" + result + "</div>";
        } else {
          result = self.options.itemHandleOptions.customHandler.replace("%s", result);
        }
      }
      return result;
    }

    //init plugin
    this.init();
  };
})();


/***/ }),

/***/ "./node_modules/ticky/ticky-browser.js":
/*!*********************************************!*\
  !*** ./node_modules/ticky/ticky-browser.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 8:0-14 */
/***/ ((module) => {

var si = typeof setImmediate === 'function', tick;
if (si) {
  tick = function (fn) { setImmediate(fn); };
} else {
  tick = function (fn) { setTimeout(fn, 0); };
}

module.exports = tick;

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! default exports */
/*! export author [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bugs [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export url [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export dependencies [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export axios [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export chart.js [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export datatables [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export datatables.net-buttons [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export datatables.net-dt [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export dropdown [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export flag-icon [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export flag-icon-css [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export i18next [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export jkanban [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export jquery [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lodash [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export materialize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export materialize-css [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export mxgraph [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export nestable2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export notiflix [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export numeral [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export perfect-scrollbar [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export quill [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export select2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export sweetalert2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export description [provided] [no usage info] [missing usage info prevents renaming] */
/*! export devDependencies [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @babel/core [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @babel/preset-env [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export babel-loader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export clean-webpack-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export compression-webpack-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export css-loader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export extract-text-webpack-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export mini-css-extract-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export optimize-css-assets-webpack-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export style-loader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export stylus [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export stylus-loader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export terser-webpack-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export webpack [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export webpack-cli [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export write-file-webpack-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export homepage [provided] [no usage info] [missing usage info prevents renaming] */
/*! export keywords [provided] [no usage info] [missing usage info prevents renaming] */
/*!   exports [not provided] [no usage info] */
/*! export license [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lockfileVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*! export main [provided] [no usage info] [missing usage info prevents renaming] */
/*! export name [provided] [no usage info] [missing usage info prevents renaming] */
/*! export repository [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export type [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export url [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export requires [provided] [no usage info] [missing usage info prevents renaming] */
/*! export scripts [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export build [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export test [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export watch [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = JSON.parse("{\"name\":\"my-cash\",\"description\":\"______________________________________ Dependency ______________________________________\",\"version\":\"1.0.0\",\"main\":\"index.js\",\"scripts\":{\"test\":\"echo \\\"Error: no test specified\\\" && exit 1\",\"build\":\"webpack\",\"watch\":\"webpack --watch\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/bryanstyawan/my-cash.git\"},\"keywords\":[],\"author\":\"\",\"license\":\"ISC\",\"bugs\":{\"url\":\"https://github.com/bryanstyawan/my-cash/issues\"},\"homepage\":\"https://github.com/bryanstyawan/my-cash#readme\",\"requires\":true,\"lockfileVersion\":1,\"dependencies\":{\"axios\":\"^0.19.2\",\"chart.js\":\"^2.9.4\",\"datatables\":\"^1.10.18\",\"datatables.net-buttons\":\"^1.6.2\",\"datatables.net-dt\":\"^1.10.18\",\"dropdown\":\"^0.2.0\",\"flag-icon\":\"^2.5.0\",\"flag-icon-css\":\"^3.4.6\",\"i18next\":\"^19.3.4\",\"jkanban\":\"^1.2.1\",\"jquery\":\"^3.5.1\",\"lodash\":\"^4.17.20\",\"materialize\":\"^1.0.0\",\"materialize-css\":\"^1.0.0\",\"mxgraph\":\"^4.1.1\",\"nestable2\":\"^1.6.0\",\"notiflix\":\"^2.3.1\",\"numeral\":\"^2.0.6\",\"perfect-scrollbar\":\"^1.5.0\",\"quill\":\"^1.3.7\",\"select2\":\"^4.0.13\",\"sweetalert2\":\"^9.10.2\"},\"devDependencies\":{\"@babel/core\":\"^7.12.3\",\"@babel/preset-env\":\"^7.12.1\",\"babel-loader\":\"^8.1.0\",\"clean-webpack-plugin\":\"^3.0.0\",\"compression-webpack-plugin\":\"^6.0.3\",\"css-loader\":\"^5.0.0\",\"extract-text-webpack-plugin\":\"^3.0.2\",\"mini-css-extract-plugin\":\"^1.1.1\",\"optimize-css-assets-webpack-plugin\":\"^5.0.4\",\"style-loader\":\"^2.0.0\",\"stylus\":\"^0.54.8\",\"stylus-loader\":\"^4.1.1\",\"terser-webpack-plugin\":\"^5.0.0\",\"webpack\":\"^5.1.3\",\"webpack-cli\":\"^4.1.0\",\"write-file-webpack-plugin\":\"^4.5.1\"}}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/engine.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;
//# sourceMappingURL=engine.min.js.map